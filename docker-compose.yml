version: "3.8"
volumes:
  pgData:
services:
  postgres:
    image: postgres:16.4-alpine3.20
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgData:/var/lib/postgresql/data
    ports:
      - 5433:5432
    deploy:
      replicas: 1
    networks:
      - dbnetwork
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
  db_migrate:
    build:
      dockerfile: ./migrate.Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      replicas: 1
    networks:
      - dbnetwork
networks:
  dbnetwork:
    name: db-network
